name: .NET CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOTNET_VERSION: '8.0.x'
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/jktech-api

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore JKTech.API/JKTech.API.csproj

    - name: Build solution
      run: dotnet build JKTech.API/JKTech.API.csproj --no-restore --configuration Release

    - name: Run unit tests
      run: dotnet test JKTech.Tests/JKTech.Tests.csproj --no-build --configuration Release --verbosity normal

  docker-build-push:
    name: Docker Build & Push
    needs: build-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ env.DOCKER_IMAGE_NAME }}:latest
